{"version":3,"sources":["../src/config_ctrl.js"],"names":["_","axios","EventStoreConfigCtrl","$scope","scope","current","jsonData","url","user","password","selectedDatabase","databases","securityToken","username","stringToEncode","auth","window","btoa","console","log","headerConfig","headers","Accept","get","then","response","token","JSON","parse","data","accessToken","catch","error","outerScope","database","db","push","name","value","length","templateUrl"],"mappings":"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","file":"config_ctrl.js","sourcesContent":["import _ from \"lodash\";\nimport * as axios from './axios';\n\nexport class EventStoreConfigCtrl {\n\n  /** @ngInject */\n  constructor($scope) {\n    this.scope = $scope;\n\n    this.current.jsonData = {};\n    this.current.jsonData.url = \"http://localhost:3020\";\n    this.current.jsonData.user = \"admin\";\n    this.current.jsonData.password = \"\";\n    this.current.jsonData.selectedDatabase = \"\";\n    this.current.jsonData.databases = [];\n\n    //TODO -- Need to automatically fetch the security token\n    this.current.jsonData.securityToken = \"bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwicm9sZSI6IkFkbWluIiwidWlkIjoiOTk5IiwiaWF0IjoxNTE4NjI4NzcxLCJleHAiOjE1MTg2NzU1NzF9.ZKN5ussntpiHOuVf8_gl_RdA4ikcacXT0nUxh9o90bs4W2xS9SoQru9QRtadaNGBEsxAUzwuXRTsHQFEpUrpQ2n7os8fJv_SOSkcDIXlvifIaF-iqWEtcJ8uptLOZBqURl59mYPexLVVbc8iVzEraEA8uG_Az1_HPxL0RO6ZwZhNvHA16r89aPmYHDNfowS0wyJnj1h3VYkRQao49Nx7amoVsmjRbJc4-O7X5W3eI8M8lNVNh3o7MaoQO1QjGni--Rac4okRPbgVCgUX5kODHBnUzsrpsDt7eAzr4aRrQTciZwMftyC_yAA9SkP80b68qtdGccHET70RD7Q_0wH7AQ\";\n  }\n\n  /**\n   * Retrieve the Bearer Token to be used for all further requests with the server\n   */\n  retrieveBearerToken() {\n    var username = this.current.jsonData.user;\n    var password = this.current.jsonData.password;\n    var url = this.current.jsonData.url\n    var stringToEncode = username + \":\" + password\n    var auth = \"Basic \" + window.btoa(stringToEncode);\n    console.log('Getting the IDP Bearer Token')\n    console.log('====================================================')\n    console.log(url + '/v1/preauth/validateAuth')\n\n    var headerConfig = {\n      headers: {\n        Accept: 'application/json',\n        'Authorization': auth\n      }\n    };\n\n    /*\n     * Problem is that browser will first make an OPTIONS request\n     * Authorization header forces the extra negotiation\n     */\n    axios.get(url + '/v1/preauth/validateAuth', headerConfig)\n    .then(function (response) {\n      var token = JSON.parse(response.data).accessToken\n      console.log('Token from Cluster successfully retrieved:')\n      console.log('====================================================')\n      console.log(token)\n      console.log('====================================================')\n      console.log('')\n      this.current.jsonData.securityToken = 'bearer ' + token;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  /**\n   * Retrieve the list of Databases currently managed by the store\n   */\n  populateDatabases() {\n    // TODO - Fix me\n    /*\n    if (_.startsWith(this.current.jsonData.url, 'https')) {\n      this.retrieveBearerToken();\n    }\n    */\n\n    // Fetch the current database list\n    var headerConfig = {\n      headers: {\n        'Authorization': this.current.jsonData.securityToken,\n        'cache-control': 'no-cache',\n        'content-type': 'application/json'\n      }\n    };\n    var outerScope = this;\n    axios.get(this.current.jsonData.url + '/com/ibm/event/api/v1/oltp/databases', headerConfig)\n    .then(function (response) {\n      outerScope.current.jsonData.databases = [];\n      var database;\n      for (database in response.data.data) {\n        var db = response.data.data[database];\n        outerScope.current.jsonData.databases.push ({name: db.name, value: db.name});\n      }\n      if (outerScope.current.jsonData.databases.length > 0) {\n        outerScope.current.jsonData.selectedDatabase = outerScope.current.jsonData.databases[0].name;\n      }\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n}\n\nEventStoreConfigCtrl.templateUrl = 'partials/config.html';\n"]}