{"version":3,"sources":["../src/query_builder.js"],"names":["renderTagCondition","tag","index","str","operator","value","condition","test","isNaN","key","_","EventStoreQueryBuilder","target","database","type","withKey","withMeasurementFilter","query","measurement","policy","match","tags","length","whereConditions","reduce","memo","push","join"],"mappings":"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","file":"query_builder.js","sourcesContent":["import _ from 'lodash';\n\nfunction renderTagCondition(tag, index) {\n  var str = '';\n  var operator = tag.operator;\n  var value = tag.value;\n  if (index > 0) {\n    str = (tag.condition || 'AND') + ' ';\n  }\n\n  if (!operator) {\n    if (/^\\/.*\\/$/.test(tag.value)) {\n      operator = '=~';\n    } else {\n      operator = '=';\n    }\n  }\n\n  // quote value unless regex or number\n  if (operator !== '=~' && operator !== '!~' && isNaN(+value)) {\n    value = \"'\" + value + \"'\";\n  }\n\n  return str + '\"' + tag.key + '\" ' + operator + ' ' + value;\n}\n\nexport class EventStoreQueryBuilder {\n\n  constructor(target, database) {\n  }\n\n  buildExploreQuery(type, withKey, withMeasurementFilter) {\n    var query;\n    var measurement;\n    var policy;\n\n    if (type === 'TAG_KEYS') {\n      query = 'SHOW TAG KEYS';\n      measurement = this.target.measurement;\n      policy = this.target.policy;\n    } else if (type === 'TAG_VALUES') {\n      query = 'SHOW TAG VALUES';\n      measurement = this.target.measurement;\n      policy = this.target.policy;\n    } else if (type === 'MEASUREMENTS') {\n      query = 'SHOW MEASUREMENTS';\n      if (withMeasurementFilter) {\n        query += ' WITH MEASUREMENT =~ /' + withMeasurementFilter + '/';\n      }\n    } else if (type === 'FIELDS') {\n      measurement = this.target.measurement;\n      policy = this.target.policy;\n\n      if (!measurement.match('^/.*/')) {\n        measurement = '\"' + measurement + '\"';\n\n        if (policy && policy !== 'default') {\n          policy = '\"' + policy + '\"';\n          measurement = policy + '.' + measurement;\n        }\n      }\n\n      return 'SHOW FIELD KEYS FROM ' + measurement;\n    } else if (type === 'RETENTION POLICIES') {\n      query = 'SHOW RETENTION POLICIES on \"' + this.database + '\"';\n      return query;\n    }\n\n    if (measurement) {\n      if (!measurement.match('^/.*/') && !measurement.match(/^merge\\(.*\\)/)) {\n        measurement = '\"' + measurement + '\"';\n      }\n\n      if (policy && policy !== 'default') {\n        policy = '\"' + policy + '\"';\n        measurement = policy + '.' + measurement;\n      }\n\n      query += ' FROM ' + measurement;\n    }\n\n    if (withKey) {\n      query += ' WITH KEY = \"' + withKey + '\"';\n    }\n\n    if (this.target.tags && this.target.tags.length > 0) {\n      var whereConditions = _.reduce(\n        this.target.tags,\n        function(memo, tag) {\n          // do not add a condition for the key we want to explore for\n          if (tag.key === withKey) {\n            return memo;\n          }\n          memo.push(renderTagCondition(tag, memo.length));\n          return memo;\n        },\n        []\n      );\n\n      if (whereConditions.length > 0) {\n        query += ' WHERE ' + whereConditions.join(' ');\n      }\n    }\n    if (type === 'MEASUREMENTS') {\n      query += ' LIMIT 100';\n      //Solve issue #2524 by limiting the number of measurements returned\n      //LIMIT must be after WITH MEASUREMENT and WHERE clauses\n      //This also could be used for TAG KEYS and TAG VALUES, if desired\n    }\n    return query;\n  }\n}\n"]}